{"version":3,"file":"static/js/197.472b0d3c.chunk.js","mappings":"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","sources":["components/App.styled.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/PhoneForm/PhoneForm.styled.js","components/PhoneForm/PhoneForm.js","components/PhoneBook/PhoneBook.js","pages/Phones.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Section = styled.div`\n  margin-left: 20px;\n  border: 1px solid black;\n  width: 350px;\n  padding: 15px;\n  background-color: aquamarine;\n  border-radius: 10%;\n`;\n","import { styled } from 'styled-components';\n\nexport const Delete = styled.button`\n  background-color: red;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Delete } from './Contacts.styled';\nimport { deleteContact } from 'redux/operations';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchTasks } from 'redux/operations';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  const filterUsers = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <ul>\n        {filterUsers.map(contact => (\n          <li key={contact.id}>\n            {contact.name}:{contact.number}\n            <Delete onClick={() => dispatch(deleteContact(contact.id))}>\n              Delete\n            </Delete>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Filters = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  width: 200px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterInput, Filters } from './Filter.styled';\nimport { addFilter } from 'redux/filterReducer';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const handleSearch = event => {\n    dispatch(addFilter(event.target.value));\n  };\n  const filterItem = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Filters>\n        Find contacts by name\n        <FilterInput\n          value={filterItem.filter}\n          onChange={handleSearch}\n          type=\"text\"\n          name=\"{card.name}\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        ></FilterInput>\n      </Filters>\n    </>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const FormInput = styled.form`\n  padding: 10px;\n  border: 2px solid gray;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: auto;\n  align-items: center;\n`;\nexport const InputName = styled.input`\n  margin-left: 26px;\n`;\nexport const InputNumber = styled.input`\n  margin-left: 10px;\n`;\nexport const FormButton = styled.button`\n  background-color: greenyellow;\n`;\n","import { useState } from 'react';\n\nimport {\n  FormButton,\n  FormInput,\n  InputName,\n  InputNumber,\n} from './PhoneForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nexport const PhoneForm = () => {\n  const contactList = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    name === 'number' ? setNumber(value) : setName(value);\n  };\n\n  const onSubmit = (name, number) => {\n    const contact = { name, number };\n    if (\n      contactList.find(\n        userCard => userCard.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      return alert(`\"${contact.name}  \"is already in contact`);\n    }\n\n    dispatch(addContact(contact));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n  return (\n    <FormInput onSubmit={handleSubmit}>\n      <label>\n        Name\n        <InputName\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <InputNumber\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <FormButton type=\"submit\">Add contacts</FormButton>\n    </FormInput>\n  );\n};\n","import { Section } from 'components/App.styled';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { PhoneForm } from 'components/PhoneForm/PhoneForm';\n\nexport const PhoneBook = () => {\n  return (\n    <Section>\n      <h1>Phone book</h1>\n      <PhoneForm></PhoneForm>\n      <h2>Contacts</h2>\n      <Filter></Filter>\n      <Contacts></Contacts>\n    </Section>\n  );\n};\n","// import { useEffect } from 'react';\n// import {\n//   useDispatch,\n//   // useSelector\n// } from 'react-redux';\nimport { PhoneBook } from 'components/PhoneBook/PhoneBook';\nimport { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { fetchTasks } from 'redux/tasks/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Phones() {\n  //   const dispatch = useDispatch();\n  //   const isLoading = useSelector(selectLoading);\n\n  //   useEffect(() => {\n  //     dispatch(fetchTasks());\n  //   }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <PhoneBook />\n      {/* <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList /> */}\n    </>\n  );\n}\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Delete","Contacts","dispatch","useDispatch","useEffect","fetchTasks","filterUsers","useSelector","selectVisibleContacts","_jsx","children","map","contact","_jsxs","name","number","onClick","deleteContact","id","Filters","FilterInput","_templateObject2","Filter","filterItem","selectFilter","_Fragment","value","filter","onChange","event","addFilter","target","type","pattern","FormInput","InputName","InputNumber","_templateObject3","FormButton","_templateObject4","PhoneForm","contactList","selectContacts","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","evt","_evt$target","onSubmit","preventDefault","find","userCard","toLowerCase","alert","concat","addContact","title","required","PhoneBook","Phones","Helmet"],"sourceRoot":""}